# Generated by Django 4.1 on 2024-06-10 14:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="LeagueModel",
            fields=[
                ("league_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                (
                    "sport",
                    models.CharField(
                        choices=[
                            ("SOCCER", "Calcio"),
                            ("VOLLEYBALL", "Pallavolo"),
                            ("BASKETBALL", "Basket"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        choices=[
                            ("AUSTRALIA", "Australia"),
                            ("BELGIUM", "Belgio"),
                            ("BRAZIL", "Brasile"),
                            ("CAMEROON", "Camerun"),
                            ("CANADA", "Canada"),
                            ("ITALY", "Italia"),
                            ("ENGLAND", "Inghilterra"),
                            ("FRANCE", "Francia"),
                            ("GERMANY", "Germania"),
                            ("GREECE", "Grecia"),
                            ("LITHUANIA", "Lituania"),
                            ("NIGERIA", "Nigeria"),
                            ("POLAND", "Polonia"),
                            ("SERBIA", "Serbia"),
                            ("SLOVENIA", "Slovenia"),
                            ("SPAIN", "Spagna"),
                            ("SWEDEN", "Svezia"),
                            ("SWITZERLAND", "Svizzera"),
                            ("TURKEY", "Turchia"),
                            ("UNITED_STATES", "Stati Uniti"),
                        ],
                        max_length=100,
                    ),
                ),
            ],
            options={"db_table": "leagues",},
        ),
        migrations.CreateModel(
            name="PlayerModel",
            fields=[
                ("player_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(default="", max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("nationality", models.TextField(default="")),
                (
                    "sport",
                    models.CharField(
                        choices=[
                            ("SOCCER", "Calcio"),
                            ("VOLLEYBALL", "Pallavolo"),
                            ("BASKETBALL", "Basket"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "fantasy_price",
                    models.DecimalField(decimal_places=3, default=0, max_digits=20),
                ),
                ("date_of_birth", models.DateField(null=True)),
                (
                    "average_rating",
                    models.DecimalField(decimal_places=3, default=0, max_digits=20),
                ),
                (
                    "fanta_average_rating",
                    models.DecimalField(decimal_places=3, default=0, max_digits=20),
                ),
            ],
            options={"db_table": "players",},
        ),
        migrations.CreateModel(
            name="PlayerRoleModel",
            fields=[
                ("role_id", models.AutoField(primary_key=True, serialize=False)),
                ("description", models.CharField(max_length=100)),
                ("short_description", models.CharField(max_length=25)),
                (
                    "sport",
                    models.CharField(
                        choices=[
                            ("SOCCER", "Calcio"),
                            ("VOLLEYBALL", "Pallavolo"),
                            ("BASKETBALL", "Basket"),
                        ],
                        max_length=100,
                    ),
                ),
            ],
            options={"db_table": "players_role",},
        ),
        migrations.CreateModel(
            name="TeamModel",
            fields=[
                ("team_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("short_name", models.CharField(max_length=10)),
                (
                    "league",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataModel.leaguemodel",
                    ),
                ),
            ],
            options={"db_table": "teams",},
        ),
        migrations.CreateModel(
            name="UserModel",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        error_messages="Name is mandatory", max_length=255
                    ),
                ),
                (
                    "surname",
                    models.CharField(
                        error_messages="Surname is mandatory", max_length=255
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages="Username is mandatory",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        error_messages="Password is mandatory", max_length=100
                    ),
                ),
            ],
            options={"db_table": "users",},
        ),
        migrations.CreateModel(
            name="UserTeamModel",
            fields=[
                ("user_team_id", models.AutoField(primary_key=True, serialize=False)),
                ("team_name", models.CharField(max_length=255)),
                (
                    "sport",
                    models.CharField(
                        choices=[
                            ("SOCCER", "Calcio"),
                            ("VOLLEYBALL", "Pallavolo"),
                            ("BASKETBALL", "Basket"),
                        ],
                        max_length=100,
                    ),
                ),
                ("deleted", models.BooleanField(default=False)),
                (
                    "league",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataModel.leaguemodel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataModel.usermodel",
                    ),
                ),
            ],
            options={"db_table": "user_teams",},
        ),
        migrations.CreateModel(
            name="UserProfilePhotoModel",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="DataModel.usermodel",
                    ),
                ),
                ("photo_file_name", models.CharField(blank=True, max_length=100)),
                ("binary_content", models.BinaryField()),
            ],
            options={"db_table": "user_profile_photos",},
        ),
        migrations.CreateModel(
            name="VolleyballPlayerAdditionalInfoModel",
            fields=[
                (
                    "player_additional_info_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("year_of_starting_season", models.PositiveIntegerField()),
                ("year_of_ending_season", models.PositiveIntegerField()),
                ("description", models.TextField()),
                ("match_played", models.PositiveIntegerField(default=0)),
                ("set_played", models.PositiveIntegerField(default=0)),
                ("total_points_scored", models.PositiveBigIntegerField(default=0)),
                ("total_serves", models.PositiveBigIntegerField(default=0)),
                ("error_serves", models.PositiveIntegerField(default=0)),
                ("ace_points_scored", models.PositiveIntegerField(default=0)),
                ("total_receiving", models.PositiveBigIntegerField(default=0)),
                ("error_receiving", models.PositiveIntegerField(default=0)),
                (
                    "perfect_receiving_percentage",
                    models.DecimalField(decimal_places=1, default=0, max_digits=20),
                ),
                ("total_attacks", models.PositiveBigIntegerField(default=0)),
                ("error_attacks", models.PositiveIntegerField(default=0)),
                ("blocked_attacks", models.PositiveIntegerField(default=0)),
                ("kills", models.PositiveIntegerField(default=0)),
                ("total_blocks", models.PositiveIntegerField(default=0)),
                ("blocking_errors", models.PositiveIntegerField(default=0)),
                ("kill_blocks", models.PositiveIntegerField(default=0)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataModel.playermodel",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="DataModel.teammodel",
                    ),
                ),
            ],
            options={"db_table": "volleyball_players_additional_info",},
        ),
        migrations.CreateModel(
            name="UserTeamPlayerModel",
            fields=[
                (
                    "user_team_player_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("included_team", models.BooleanField(default=False)),
                ("favorite", models.BooleanField(default=False)),
                ("excluded", models.BooleanField(default=False)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataModel.playermodel",
                    ),
                ),
                (
                    "user_team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataModel.userteammodel",
                    ),
                ),
            ],
            options={"db_table": "user_team_players",},
        ),
        migrations.CreateModel(
            name="SoccerPlayerAdditionalInfoModel",
            fields=[
                (
                    "player_additional_info_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("year_of_starting_season", models.PositiveIntegerField()),
                ("year_of_ending_season", models.PositiveIntegerField()),
                ("description", models.TextField()),
                ("match_played", models.PositiveIntegerField(default=0)),
                ("goal_scored", models.PositiveIntegerField(default=0)),
                ("goals_conceded", models.PositiveIntegerField(default=0)),
                ("own_goal", models.PositiveIntegerField(default=0)),
                ("clean_sheet", models.PositiveIntegerField(default=0)),
                ("penalties_saved", models.PositiveIntegerField(default=0)),
                ("total_penalties_kicked", models.PositiveIntegerField(default=0)),
                ("penalties_scored", models.PositiveIntegerField(default=0)),
                ("assist", models.PositiveIntegerField(default=0)),
                ("warnings", models.PositiveIntegerField(default=0)),
                ("expulsions", models.PositiveIntegerField(default=0)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataModel.playermodel",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="DataModel.teammodel",
                    ),
                ),
            ],
            options={"db_table": "soccer_players_additional_info",},
        ),
        migrations.AddField(
            model_name="playermodel",
            name="role",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="DataModel.playerrolemodel",
            ),
        ),
        migrations.AddField(
            model_name="playermodel",
            name="team",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="DataModel.teammodel",
            ),
        ),
        migrations.CreateModel(
            name="OptionVolleyballModel",
            fields=[
                ("option_id", models.AutoField(primary_key=True, serialize=False)),
                ("min_age", models.IntegerField(null=True)),
                ("max_age", models.IntegerField(null=True)),
                ("apply_favorite_players", models.BooleanField(default=True)),
                ("apply_excluded_players", models.BooleanField(default=True)),
                (
                    "average_match_played",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_set_played",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "budget_setter",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "budget_left_side_hitter",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "budget_opposite_hitter",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "budget_midde_blocker",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "budget_libero",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_attack_scored",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_block_points_scored",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_ace_points_scored",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_perfect_receives",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "user_team",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataModel.userteammodel",
                    ),
                ),
            ],
            options={"db_table": "options_volleyball",},
        ),
        migrations.CreateModel(
            name="OptionSoccerModel",
            fields=[
                ("option_id", models.AutoField(primary_key=True, serialize=False)),
                ("min_age", models.IntegerField(null=True)),
                ("max_age", models.IntegerField(null=True)),
                ("apply_favorite_players", models.BooleanField(default=True)),
                ("apply_excluded_players", models.BooleanField(default=True)),
                (
                    "budget_goalkeeper",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "budget_defender",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "budget_midfielder",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "budget_straikers",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_match_played",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_goals",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_assist",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_yellow_cards",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_red_cards",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "user_team",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataModel.userteammodel",
                    ),
                ),
            ],
            options={"db_table": "options_soccer",},
        ),
        migrations.CreateModel(
            name="OptionBasketballModel",
            fields=[
                ("option_id", models.AutoField(primary_key=True, serialize=False)),
                ("min_age", models.IntegerField(null=True)),
                ("max_age", models.IntegerField(null=True)),
                ("apply_favorite_players", models.BooleanField(default=True)),
                ("apply_excluded_players", models.BooleanField(default=True)),
                (
                    "budget_point_guard",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "budget_shooting_guard",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "budget_small_forward",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "budget_power_forward",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "budget_center",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_games_played",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_games_started",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_points_per_game",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_rebounds_per_game",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_assists_per_game",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "average_three_points",
                    models.DecimalField(decimal_places=2, max_digits=20, null=True),
                ),
                (
                    "user_team",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataModel.userteammodel",
                    ),
                ),
            ],
            options={"db_table": "options_basketball",},
        ),
        migrations.CreateModel(
            name="BasketballPlayerAdditionalInfoModel",
            fields=[
                (
                    "player_additional_info_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("year_of_starting_season", models.PositiveIntegerField()),
                ("year_of_ending_season", models.PositiveIntegerField()),
                ("description", models.TextField()),
                ("match_played", models.PositiveIntegerField(default=0)),
                ("game_started", models.PositiveIntegerField(default=0)),
                ("points", models.PositiveIntegerField(default=0)),
                ("rebounds", models.PositiveIntegerField(default=0)),
                ("assist", models.PositiveIntegerField(default=0)),
                (
                    "field_goal_percentage",
                    models.DecimalField(decimal_places=1, default=0, max_digits=20),
                ),
                (
                    "three_point_percentage",
                    models.DecimalField(decimal_places=1, default=0, max_digits=20),
                ),
                ("steals", models.PositiveIntegerField(default=0)),
                ("blocks", models.PositiveIntegerField(default=0)),
                ("personal_fouls", models.PositiveIntegerField(default=0)),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataModel.playermodel",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="DataModel.teammodel",
                    ),
                ),
            ],
            options={"db_table": "basketball_players_additional_info",},
        ),
    ]
